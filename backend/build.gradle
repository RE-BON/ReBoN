buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'java'
}

group = 'com.handong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'ca.pjer:logback-awslogs-appender:1.6.0'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    implementation 'org.springframework.cloud:spring-cloud-aws-core:2.2.6.RELEASE'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'com.google.guava:guava:30.1.1-jre'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    testImplementation 'io.rest-assured:rest-assured:4.4.0'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    testImplementation "org.testcontainers:elasticsearch:1.16.3"
    testImplementation "org.testcontainers:junit-jupiter:1.16.3"

    testImplementation 'com.squareup.okhttp3:okhttp:4.0.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.mock-server:mockserver-netty:5.13.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

processResources.dependsOn('copySecret', 'copyAppender')

task copySecret(type: Copy) {
    from './security'
    include '*.yml'
    into './src/main/resources'
}

task copyAppender(type: Copy) {
    from './security/appender'
    include '*.xml'
    into './src/main/resources/appender'
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}
